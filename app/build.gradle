apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

//1.当*.kt 后缀的Activity上使用@Router（path =xxxxx）时候遇到No match path；原因： *.kt 上的注解需要使用 kotlin方式的注解解释器才可以识别。
//kapt {
//    arguments {
//        arg("moduleName", project.getName())
//    }
//    generateStubs = true
//}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.duobang.jetpackmvvm"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 19
        versionName "1.1.9"
        multiDexEnabled true
        ndk {
              // 设置支持的SO库架构 一般只设置这个就阔以设配所有的设备了，还可以减少apk的大小
              abiFilters 'armeabi','armeabi-v7a','x86'
          }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

    }
    //支持DataBinding
    dataBinding {
        enabled = true
    }
    //使用Kotlin实验特性
    androidExtensions {
        experimental = true
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true//开启混淆
            shrinkResources true// 移除无用的resource文件
            zipAlignEnabled true//去除无用资源
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    def dependencies = rootProject.ext.dependencies

    //项目核心框架
    implementation project(":lib_common")
    implementation project(":module_login")

    kapt dependencies.arouterCompiler
}
